<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.0/core/openspaces-core.xsd">

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>

    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we do not specify here the cluster topology of the space. It is declated outside of
        the processing unit or within the SLA bean.
    -->
    <os-core:space id="spaceProcessor" url="/./spaceProcessor"/>
    <!--<os-core:space id="spaceFeeder" url="jini://*/*/spaceFeeder?locators=127.0.0.1" />-->

    <!--
        Defines a distributed transaction manager.
    -->
    <os-core:distributed-tx-manager id="transactionManager"/>

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpaceProcessor" space="spaceProcessor" tx-manager="transactionManager"/>
    <!--<os-core:giga-space id="gigaSpaceFeeder" space="spaceFeeder" clustered="true" />-->

    <!--Use this for slf4j-->
    <!--<bean id="initJulBridge" class="com.gigaspaces.logging.InitLogging" init-method="init"/>-->
</beans>